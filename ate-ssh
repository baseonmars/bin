#!/bin/bash

get_apps() {
  all_instances=$1

  app_names=$(echo "$all_instances" | jq '.[] | select(.appName | test("ate|geoip"))? | .appName' | sed 's/"//g' | sort | uniq)
  echo "$app_names"
}

aws-ssh() {
  APP=$1

  ENV=$2
  if [ -z "$ENV" ]; then
    ENV="dev"
  fi

  REGION="eu-west-1"

  if [ "$ENV" = "dev" ]; then
    ASGARD_URL="http://asgard.ads.dev.schibsted.io/${REGION}"
  elif [ "$ENV" = "pre" ]; then
    ASGARD_URL="http://asgard.ads.pre.schibsted.io/${REGION}"
  else
    ASGARD_URL="http://asgard.ads.schibsted.io/{$REGION}"
  fi

  all_instances=$(curl -s $ASGARD_URL/instance/list.json)

  if [ -z "$APP" ]; then
    echo "No apps specified; showing list of app names"
    get_apps "$all_instances"
    exit 1
  fi

  app_instances=$(echo "$all_instances" | jq --arg app $APP '.[] | select(.appName == $app) | select(.appInstance.status == "UP") | .hostName' | sed 's/"//g')

  if [[ -z "${app_instances// }" ]]; then
    echo "No instances found for app, exiting"
    exit 2
  fi

  instances_count=$(echo "$app_instances" | wc -l)
  if [ $instances_count -eq 1 ]; then
    echo "ssh to $app_instances"

    ssh -i $SSH_DIR/ads.developers.$ENV.pem ec2-user@$app_instances
    exit 0
  else
    echo "Available instances:"
    echo "$app_instances"
    exit 4
  fi
}

if [ -z "$SSH_DIR" ]; then
  SSH_DIR=$HOME/.ssh
fi

aws-ssh "$@"
